package native

import (
	"math/big"

	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/vm"
)

func (*bundlerCollector) CaptureArbitrumTransfer(
	env *vm.EVM,
	from, to *common.Address,
	value *big.Int,
	before bool,
	purpose string,
) {
}
func (*bundlerCollector) CaptureArbitrumStorageGet(key common.Hash, depth int, before bool)        {}
func (*bundlerCollector) CaptureArbitrumStorageSet(key, value common.Hash, depth int, before bool) {}
func (*bundlerCollector) CaptureStylusHostio(name string, args, outs []byte, startInk, endInk uint64) {
}

func (*bundlerExecutor) CaptureArbitrumTransfer(
	env *vm.EVM,
	from, to *common.Address,
	value *big.Int,
	before bool,
	purpose string,
) {
}
func (*bundlerExecutor) CaptureArbitrumStorageGet(key common.Hash, depth int, before bool)        {}
func (*bundlerExecutor) CaptureArbitrumStorageSet(key, value common.Hash, depth int, before bool) {}
func (*bundlerExecutor) CaptureStylusHostio(name string, args, outs []byte, startInk, endInk uint64) {
}
